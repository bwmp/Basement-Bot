// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model sessions {
  sessionId    String    @unique(map: "sessionId")
  accessToken  String    @unique(map: "accessToken")
  refreshToken String?
  expiresAt    DateTime?
  scope        String?
  pfp          String?   @default("https://cdn.discordapp.com/embed/avatars/0.png")
  accent       String?
}

model licenses {
  license_key String  @unique
  userId      String
  product     String
  hwid        String  @default("none")
  bypass      Boolean @default(false)

  @@unique([hwid, product], map: "Identifier1")
  @@unique([userId, product], map: "Identifier2")
}

model settings {
  guildId         String @unique(map: "guildId")
  leavemessage    String @default("{\"message\":\"\",\"channel\":\"false\"}") @db.LongText
  leaveimage      String @default("{\"backgroundColor\":\"#0d0d0d\",\"image\":\"\",\"textColor\":\"#f0ccfb\",\"shadow\":\"true\",\"shadowColor\":\"#7c4b8b\"}") @db.LongText
  joinmessage     String @default("{\"message\":\"\",\"channel\":\"false\"}") @db.LongText
  joinimage       String @default("{\"backgroundColor\":\"#0d0d0d\",\"image\":\"\",\"textColor\":\"#f0ccfb\",\"shadow\":\"true\",\"shadowColor\":\"#7c4b8b\"}") @db.LongText
  ticketdata      String @default("{\"logChannel\": \"false\",\"categories\": {\"open\": \"false\",\"closed\": \"false\"},\"supportRole\": \"false\",\"message\": \"false\",\"transcripts\": \"false\"}") @db.LongText
  membercount     String @default("{\"channel\": \"false\",\"text\": \"Members: {COUNT}\"}")
  wishlistchannel String @default("false")
  counting        String @default("{\"channel\": \"false\",\"countnumber\": \"1\",\"countmax\": \"1\"}") @db.LongText
  ticketId        Int    @default(0)
}

model reactionroles {
  guildId     String
  roleId      String
  description String
  group       String

  @@unique([guildId, group], map: "Identifier")
}

model levels {
  guildId   String
  userId    String
  username  String @default("Unkown User")
  level     Int    @default(1)
  xp        Int    @default(0)
  xp_needed Int    @default(66)

  @@unique([userId, guildId], map: "Identifier")
}

model level_rewards {
  guildId String
  level   Int
  role    String
  message String

  @@unique([guildId, level], map: "Identifier")
}

model ticketdata {
  guildId         String
  id              Int
  userId          String
  channelID       String  @unique(map: "channelID") @default("")
  ticketReason    String  @default("")
  open            Boolean @default(true)
  users           String  @default("[]")
  originalMessage String  @default("")

  @@unique([guildId, id], map: "Identifier")
}
